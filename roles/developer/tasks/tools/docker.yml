---

- name: ensure obsolete packages are absent
  apt:
    name: ['docker', 'docker-engine', 'docker.io', 'containerd', 'runc']
    state: absent
    purge: yes

- name: ensure dependencies are installed
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg', 'lsb-release', 'software-properties-common']
    state: present
    update_cache: yes

- name: add docker apt fingerprint
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    state: present

- name: add docker apt repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    state: present

- name: Use iptable legacy
  community.general.alternatives:
    name: iptables
    path: /usr/sbin/iptables-legacy
    link: /usr/sbin/iptables
    state: present

- name: install docker
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-buildx-plugin', 'docker-compose-plugin']
    state: present
    update_cache: yes

- name: ensure docker group exists
  group:
    name: docker
    state: present

- name: add users to docker group
  user:
    name: "{{ item }}"
    append: yes
    groups: docker
  with_items: "{{ docker_users }}"
  #notify: restart docker daemon

- name: create docker folder settings
  ansible.builtin.file:
    path: /etc/docker
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: specify docker daemon.json
  ansible.builtin.copy:
    src: "{{ role_path }}/files/daemon.json"
    dest: /etc/docker/daemon.json

## Start docker at startup :
# Windows 10
- name: Start docker at startup - Windows 10
  ansible.builtin.copy:
    content: |
      # Start docker at startup
      wsl.exe -u root -e sh -c "service docker status || service docker start"
    dest: "/home/{{ lookup('env', 'USER') }}/.bashrc.d/docker_startup.bashrc"
    mode: '0644'
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
  when: winver == "10"

# Windows 11
- name: Ensure wsl.conf exists - Windows 11
  ansible.builtin.copy:
    content: "[boot]\n"
    dest: "/etc/wsl.conf"
    force: no
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  when: winver == "11"

- name: Start docker at startup - Windows 11
  ansible.builtin.lineinfile:
    path: "/etc/wsl.conf"
    line: command = "service docker start"
    state: present
    insertafter: '[boot]'
  when: winver == "11"

- name: Delete old startup for Windows 10 - Windows 11
  ansible.builtin.file:
    path: "/home/{{ lookup('env', 'USER') }}/.bashrc.d/docker_startup.bashrc"
    state: absent
  when: winver == "11"
